service: pickme-lambda-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    user_pool_id: { Ref: PickmeUserPool }
    client_id: { Ref: PickmeUserClient }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
      Resource: "*"  

functions:
  loginUser:
    handler: src/user/login.handler
    events:
      - http:
          path: user/login
          method: post
          cors: true

  signupUser:
    handler: src/user/signup.handler
    events:
      - http:
          path: user/signup
          method: post
          cors: true

  privateAPI:
    handler: src/user/private.handler
    events:
      - http:
          path: user/private
          method: post
          cors: true
          authorizer:
            name: pickmeUsersAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - PickmeUserPool
                - Arn
            claims:
              - email

  restaurantsAPI:
    handler: src/restaurants/restaurants.handler
    events:
      - http:
          path: user/restaurants
          method: post
          cors: true
          authorizer:
            name: pickmeUsersAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - PickmeUserPool
                - Arn
            claims:
              - email
          path: user/restaurants/{id}
          method: get
          cors: true
          authorizer:
            name: pickmeUsersAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - PickmeUserPool
                - Arn
            claims:
              - email                  

resources:
  Resources:
    PickmeUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: pickme-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]

    PickmeUserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: pickme-pool-ui
        GenerateSecret: false
        UserPoolId: { Ref: PickmeUserPool }
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - "ADMIN_NO_SRP_AUTH"